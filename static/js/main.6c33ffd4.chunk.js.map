{"version":3,"sources":["store/profile/actions.js","store/profile/reducer.js","constants/index.js","store/animate/actions.js","store/animate/reducer.js","components/Navbar/Navbar.jsx","components/PageAnimated/PageAnimated.jsx","components/Loader/Loader.jsx","pages/Main/Main.jsx","pages/About/About.jsx","pages/Settings/Settings.jsx","pages/NotFound/NotFound.jsx","store/posts/actions.js","store/posts/reducer.js","pages/DataList/DataList.jsx","routing/Routing.jsx","store/reducers.js","store/middlewares.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["profileActionTypes","initialState","profile","name","theme","paths","animateActionTypes","animateActions","isAnimate","type","payload","startAnimate","Navbar","history","useHistory","dispatch","useDispatch","handleClickLink","path","event","preventDefault","animateTimeout","setTimeout","push","clearTimeout","className","href","onClick","PageAnimated","children","useSelector","state","animate","classes","useMemo","Loader","Main","About","Settings","NotFound","postsActionTypes","postsActions","setPosts","posts","setLoading","loading","clear","fetchPosts","a","fetch","response","json","console","log","message","DataList","store","useEffect","map","post","i","title","Routing","exact","reducers","combineReducers","action","middlewares","composeWithDevTools","applyMiddleware","next","getState","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c33ffd4.chunk.js","sourcesContent":["export const profileActionTypes = {\n    SET_PROFILE: 'PROFILE.SET_PROFILE',\n    SET_THEME: 'PROFILE.SET_PROFILE'\n}\n\nexport const profileActions = {\n    setProfile: (payload) => ({ type: profileActionTypes.SET_PROFILE, payload}),\n    setTheme: (payload) => ({ type: profileActionTypes.SET_THEME, payload})   \n}","import { profileActionTypes } from \"./actions\";\n\nconst initialState = {\n    profile: { name: \"Harry\" },\n    theme: 'light'\n}\n\nexport const profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case profileActionTypes.SET_PROFILE:\n            return { ...state, profile: action.payload };\n        \n        case profileActionTypes.SET_THEME:\n            return { ...state, theme: action.payload }    \n\n        default:\n            return state\n    }\n}","export const paths = {\n    main: '/',\n    about: '/about',\n    settings: '/settings',\n    dataList: '/data-list'\n}","export const animateActionTypes = {\n    SET_START_ANIMATE: 'ANIMATE.SET_START_ANIMATE'\n}\n\nexport const animateActions = {\n    setStartAnimate: (isAnimate) => ({ type: animateActionTypes.SET_START_ANIMATE, payload: isAnimate })\n}","import { animateActionTypes } from './actions';\n\nconst initialState = {\n    startAnimate: false\n}\n\nexport const animateReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case animateActionTypes.SET_START_ANIMATE:\n            return { ...state, startAnimate: action.payload };\n        \n        default:\n            return state\n    }\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './style.css';\nimport { paths } from '../../constants';\nimport { useDispatch } from 'react-redux';\nimport { animateActions } from '../../store/animate';\n\n\nexport const Navbar = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const handleClickLink = (path) => (event) => {\n        event.preventDefault();\n        dispatch(animateActions.setStartAnimate(true));\n\n        const animateTimeout = setTimeout(() => {\n            dispatch(animateActions.setStartAnimate(false));\n            history.push(path);\n            clearTimeout(animateTimeout);\n        }, 700);\n\n    }\n\n    return (\n        <div className=\"navbar\">\n            <a className=\"navbar-link\" href=\"#\" onClick={handleClickLink(paths.main)}>Головна</a>\n            <a className=\"navbar-link\" href=\"#\" onClick={handleClickLink(paths.about)}>Про нас</a>\n            <a className=\"navbar-link\" href=\"#\" onClick={handleClickLink(paths.settings)}>Настройки</a>\n            <a className=\"navbar-link\" href=\"#\" onClick={handleClickLink(paths.dataList)}>Дані</a>\n        </div>\n    )\n}","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport const PageAnimated = ({children}) =>  {\n    const { startAnimate } = useSelector((state) => state.animate);\n\n    const classes = useMemo(() => startAnimate ? 'page animate' : 'page', [startAnimate])\n    \n    return (\n        <div className={classes}>\n            {children}\n        </div>\n    )\n}","import React from \"react\";\n\nimport \"./style.css\";\n\nexport const Loader = () => (\n    <div className=\"loader\">\n        <div className=\"loader-spring\"></div>\n    </div>\n) ","import React from 'react';\n\nimport './style.css';\nimport { PageAnimated } from '../../components'\n\nexport const Main = () => {\n \n    return (\n        <PageAnimated>\n            <div className=\"main\">\n                <div className=\"row\">\n                <div className=\"block block-right\"></div>\n            </div>\n            <div className=\"row\">\n                <div className=\"block block-left\"></div>\n                <div className=\"block block-right\"></div>\n            </div>\n            </div>\n        </PageAnimated>\n    )\n}","import React from 'react';\n\nimport './style.css';\nimport { PageAnimated } from '../../components'\n\nexport const About = () => {\n    return (\n        <PageAnimated>\n        <div className='about'>\n            <div className=\"row\">\n                <div className=\"block block-left\"></div>\n                <div className=\"block block-right\"></div>\n            </div>\n            <div className=\"row\">\n                <div className=\"block block-left\"></div>\n                <div className=\"block block-right\"></div>\n                <div className=\"block block-right\"></div>\n            </div>\n        </div>\n        </PageAnimated>\n    )\n}","import React from 'react';\n\nimport './style.css';\nimport { PageAnimated } from '../../components'\n\n\nexport const Settings = () => {\n    return (\n        <PageAnimated>\n            <div className='settings'>\n                <div className=\"row\">\n                <div className=\"block block-left\"></div>\n                <div className=\"block block-left\"></div>\n                <div className=\"block block-right\"></div>\n                <div className=\"block block-right\"></div>\n            </div>\n            <div className=\"row\">\n                <div className=\"block block-left\"></div>\n                <div className=\"block block-right\"></div>\n            </div>\n            </div>\n        </PageAnimated>\n    )\n}","import React from 'react';\n\nimport './style.css';\n\nexport const NotFound = () => {\n    return (\n        <div className='not-found'>\n            <h1>404</h1>\n        </div>\n    )\n}","    export const postsActionTypes = {\n    SET_POSTS: \"POSTS.SET_POSTS\",\n    CLEAR: \"POSTS.CLEAR\",\n    SET_LOADING: 'POST.SET_LOADING'\n}\n\nexport const postsActions = {\n    setPosts: (posts) => ({ type: postsActionTypes.SET_POSTS, payload: posts}),\n    setLoading: (loading) => ({ type: postsActionTypes.SET_LOADING, payload: loading}),\n    clear: () => ({ type: postsActionTypes.CLEAR }),\n\n    fetchPosts: () => async (dispatch) => {\n        dispatch(postsActions.setLoading(true));\n        try {\n            const response = await fetch('https://jsonplaceholder.typicode.com/posts')\n            const posts = await response.json();\n\n            dispatch(postsActions.setPosts(posts));\n        } catch(error) {\n            console.log(error.message);\n        }finally {\n            dispatch(postsActions.setLoading(false));\n        }\n    }\n}","import { postsActionTypes } from \"./actions\";\n\nconst initialState = {\n    posts: [],\n    loading: false,\n}\n\nexport const postsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case postsActionTypes.SET_POSTS:\n            return { ...state, posts: action.payload };\n\n        case postsActionTypes.SET_LOADING:\n            return { ...state, loading: action.payload };\n            \n        case postsActionTypes.CLEAR:\n            return{ ...state, posts: [] }\n\n        default:\n            return state\n    }\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport './style.css';\nimport { Loader, PageAnimated } from '../../components';\nimport { postsActions } from '../../store/posts';\n\nexport const DataList = () => {\n    const dispatch = useDispatch();\n    const { posts, loading } = useSelector((store) => store.posts );\n\n    useEffect(() => {\n        dispatch(postsActions.fetchPosts());\n    }, [])\n\n    return (\n        <>\n            <PageAnimated>\n                <div className=\"data-list\">\n                    <div className=\"data-list\">\n                        {posts.map((post, i) => (\n                            <div \n                            key={i} \n                            className={`block ${(i % 2 === 0) ? 'block-right' : 'block-left'}`}\n                            >\n                                <span>{post.title}</span>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </PageAnimated>\n            {loading && <Loader />}\n        </>\n    )\n}\n\n{/*            <div className=\"block block-right\"></div>\n                <div className=\"block block-left\"></div>\n                <div className=\"block block-right\"></div>\n                <div className=\"block block-left\"></div> */}","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Main, About, Settings, DataList, NotFound } from \"../pages\";\nimport {paths} from \"../constants\"\nimport { Navbar } from \"../components\";\n\nexport const Routing = () => {\n    return (\n        <Router>\n            <Navbar />\n            <Switch>\n                <Route path={paths.main} exact>\n                    <Main />\n                </Route>\n                <Route path={paths.about} exact>\n                    <About />\n                </Route>\n                <Route path={paths.settings} exact>\n                    <Settings />\n                </Route>\n                <Route path={paths.dataList}>\n                    <DataList />\n                </Route>\n                <NotFound />\n            </Switch>\n        </Router>\n    )\n}","import { combineReducers } from \"redux\";\n\nimport { profileReducer as profile } from \"./profile\";\nimport { animateReducer as animate} from \"./animate\";\nimport { postsReducer as posts } from \"./posts\";\n\nexport const reducers = combineReducers({\n    profile,\n    animate,\n    posts\n})","import { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n/* function logger() {\n    return function (store) {\n        return function (next) {\n            \n        }\n    }\n} */\n\nconst logger = (store) => (next) => (action) => {\n    const state = store.getState();\n\n    console.log(action, state);\n\n    return next(action);\n}\n\n const thunk = ({ dispatch, getState }) => (next) => (action) => {\n    return typeof action === \"function\" ? action(dispatch, getState) : next(action); \n }\n/* const thunk = (store) => (next) => (action) => {\n    const { dispatch, getState } = store;\n    if (typeof action === \"function\") {\n        return action(dispatch, getState);\n    }\n    return next(action);\n} */\n\nexport const middlewares = composeWithDevTools(applyMiddleware(logger, thunk));","import {createStore} from \"redux\";\n\nimport { reducers } from \"./reducers\";\nimport { middlewares } from \"./middlewares\";\n\nexport const store = createStore(reducers, middlewares);","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\n//import { Profile, LoginForm } from \"./components\";\nimport { Routing } from \"./routing/Routing\";\nimport { store } from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routing />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}